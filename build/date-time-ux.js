/*
 * Copyright (c) 2011 Andrew Pleshkov andrew.pleshkov@gmail.com
 * 
 * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
 */
Ext.define("Ext.ux.picker.Time",{extend:"Ext.form.Panel",alias:"widget.uxtimepicker",format:Ext.picker.Time.prototype.format,nowText:"Now",doneText:"Done",hoursLabel:"Hours",hoursIncrement:1,minsLabel:"Minutes",minsIncrement:1,showSeconds:false,secsLabel:"Seconds",secsIncrement:1,width:210,bodyPadding:10,layout:"anchor",defaults:{anchor:"100%"},initComponent:function(){this.bbar=[{text:this.nowText,handler:function(){this.setCurrentTime(true)},scope:this},"->",{text:this.doneText,handler:this.onDone,scope:this}];this.callParent();this._initSliders(this);this.addEvents("select");if(this.value){this.setValue(this.value,false)}else{this.setCurrentTime(false)}},_initSliders:function(a){this._createSlider("hours",{minValue:0,maxValue:23},a);this._createSlider("mins",{minValue:0,maxValue:59},a);if(this.showSeconds){this._createSlider("secs",{minValue:0,maxValue:59},a)}return a},_createSlider:function(d,f,a){var g=d+"Slider";var b=this[g]||{};delete this[g];delete this.initialConfig[g];var h=Ext.apply({increment:this[d+"Increment"],fieldLabel:this[d+"Label"],labelAlign:"top",clickToChange:false},b,f);var e=this[g]=Ext.ComponentManager.create(h,"slider");e.on("change",this._updateTimeValue,this);if(Ext.isArray(a)){a.push(e)}else{if(a instanceof Ext.util.MixedCollection){a.add(e)}else{if(a.isContainer){a.add(e)}}}return e},setCurrentTime:function(a){this.setValue(new Date(),!!a)},onDone:function(){this.fireEvent("select",this,this.getValue());this.hide()},setValue:function(b,a){this.hoursSlider.setValue(b.getHours(),a);this.minsSlider.setValue(b.getMinutes(),a);if(this.showSeconds){this.secsSlider.setValue(b.getSeconds(),a)}this._updateTimeValue()},getValue:function(){var a=new Date();a.setHours(this.hoursSlider.getValue());a.setMinutes(this.minsSlider.getValue());if(this.showSeconds){a.setSeconds(this.secsSlider.getValue())}return a},_updateTimeValue:function(){var a=Ext.Date.format(this.getValue(),this.format);if(this.rendered){this.setTitle(a)}},afterRender:function(){this.callParent();this._updateTimeValue()},afterShow:function(){this.callParent(arguments);var b=this.getValue();var a=false;this.items.each(function(d){if(d.isXType("slider")){var c=d.thumbs[0];if(!a){a=c.el.getLeft(true)<0}if(a){c.value=-1}}});if(a){this.setValue(b,false)}},beforeDestroy:function(){this.hoursSlider=null;this.minsSlider=null;this.secsSlider=null;this.callParent()}});(function(){var b="ux-datetimepicker";var a=new Ext.Class({extend:"Ext.picker.Date",_renderBottomButtons:function(c){this.doneBtn=Ext.widget("button",{renderTo:this.footerEl.createChild({cls:b+"-donebtn-wrap"}),text:this.doneText,handler:this.onDone});if(!c){this.todayBtn.hide()}else{this.todayBtn.getEl().wrap({cls:b+"-todaybtn-wrap"})}this.footerEl.createChild({cls:"x-clear"})},onRender:function(e,d){var c=this.showToday;this.showToday=true;this.callParent([e,d]);this._renderBottomButtons(c);this.showToday=c},beforeDestroy:function(){Ext.destroy(this.doneBtn);this.doneBtn=null;this.onDone=this.initialConfig.onDone=null;this.callParent()}});Ext.define("Ext.ux.picker.DateTime",{extend:"Ext.Component",alias:"widget.datetimepicker",baseCls:b,timeLabel:"Time",doneText:"Done",setTimeText:"Change...",dateFormat:a.prototype.format,timeFormat:Ext.picker.Time.prototype.format,width:a.prototype.width,initComponent:function(){this.callParent();this.addEvents("select");this._initDatePicker(this.datePicker);this._initTimePicker(this.timePicker);if(this.value){this.setValue(this.value);delete this.value}},_initDatePicker:function(e){var g=e||{};var d=g.isComponent?g.initialConfig:g;var f=function(){this.fireEvent("select",this,this.getValue())};var c=Ext.applyIf({format:this.dateFormat,doneText:this.doneText,onDone:Ext.Function.bind(f,this)},d||{});this.datePicker=new a(c)},_initTimePicker:function(d){if(d&&d.isComponent){this.timePicker=d}else{var c=Ext.apply({floating:true,format:this.timeFormat},d);this.timePicker=Ext.ComponentManager.create(c,"uxtimepicker")}this._assertTimePicker(this.timePicker);this.timePicker.on("select",this.onTimeSelect,this)},_assertTimePicker:function(c){var d=c.isComponent&&c.isFloating()&&c.events.select;if(!d){Ext.Error.raise("Invalid time picker")}},_renderTimeEl:function(c,e){var d=new Ext.XTemplate('<tpl if="label">','<span class="{baseCls}-timelabel">{label}:</span>&nbsp;',"</tpl>",'<span id="{id}-timevalue" class="{baseCls}-timevalue">{value}</span>');var g=this.getId()+"-timebtn-cell";var f=c.insertFirst({cls:[e+"-timecontainer",Ext.picker.Date.prototype.baseCls+"-footer"].join(" "),children:[{tag:"table",cls:e+"-timecontainer-inner",children:[{tag:"tr",children:[{tag:"td",cls:e+"-time",html:d.apply({id:this.getId(),baseCls:e,label:this.timeLabel,value:this._getFormattedTimeValue(this.timePicker.getValue())})},{tag:"td",id:g}]}]}]});this.timePickerButton=Ext.widget("button",{renderTo:f.down("#"+g),text:this.setTimeText,handler:this._toggleTimePicker,scope:this});this.timeValueEl=f.down("#"+this.getId()+"-timevalue")},onRender:function(d,c){this.el=d.createChild({tag:"div",role:"presentation"},this.getInsertPosition(c));this.callParent([d,c]);this.datePicker.render(this.el);this._renderTimeEl(this.datePicker.getEl(),this.baseCls);this.el.on("click",this._collapseTimePickerIf,this)},_collapseTimePickerIf:function(d){var c=this.timePicker;if(c.rendered&&c.isVisible()&&!d.within(this.timePickerButton.getEl())){c.hide()}},_toggleTimePicker:function(d){var c=this.timePicker;if(!c.isVisible()||!c.rendered){c.show();c.alignTo(d)}else{c.hide()}},_getFormattedTimeValue:function(c){return Ext.Date.format(c,this.timePicker.format)},_updateTimeValue:function(c){if(this.timeValueEl!=null){this.timeValueEl.update(this._getFormattedTimeValue(c))}},setValue:function(c){this._updateTimeValue(c);this.timePicker.setValue(c);this.datePicker.setValue(c)},getValue:function(){var d=this.datePicker.getValue();var e=this.timePicker.getValue();var c=Ext.Date.clearTime(e,true);e=Ext.Date.getElapsed(e,c);return new Date(d.getTime()+e)},onTimeSelect:function(c,d){this._updateTimeValue(d)},onDateSelect:function(c,d){this.fireEvent("select",this,d)},afterHide:function(c,d){this.timePicker.hide();this.callParent([c,d])},beforeDestroy:function(){Ext.destroy(this.datePicker);this.datePicker=null;Ext.destroy(this.timePicker);this.timePicker=null;Ext.destroy(this.timePickerButton);this.timePickerButton=null;if(this.timeValueEl){this.timeValueEl.remove();this.timeValueEl=null}this.callParent()}})})();(function(){var a="datetimepicker";Ext.define("Ext.ux.menu.DateTimePicker",{extend:"Ext.menu.DatePicker",alias:"widget.datetimemenu",requires:["Ext.ux.picker.DateTime"],initComponent:function(){this.callParent();this.on("beforehide",function(){var b=this.picker.timePicker;if(!this.__byManager){return !(b.rendered&&b.isVisible())}else{b.hide()}},this)},initItems:function(){this.items.xtype=a;this.callParent()},down:function(b){if("datepicker"===b){return this.callParent([a])}else{return this.callParent([b])}},hide:function(){this.__byManager=true;this.callParent(arguments);this.__byManager=false;return this}})})();(function(){var a=Ext.ux.picker.DateTime.prototype;Ext.define("Ext.ux.form.field.DateTime",{extend:"Ext.form.field.Date",alias:"widget.datetimefield",timeLabel:a.timeLabel,doneText:a.doneText,setTimeText:a.setTimeText,dateFormat:a.dateFormat,datePicker:null,timePicker:null,timeFormat:a.timeFormat,pickerConfig:null,initComponent:function(){this.callParent();this.format=this.dateFormat+" "+this.timeFormat},createPicker:function(){var c=this;var d=Ext.String.format;var b=Ext.apply(this.pickerConfig||{},{ownerCt:this.ownerCt,renderTo:document.body,floating:true,hidden:true,focusOnShow:true,minDate:c.minValue,maxDate:c.maxValue,disabledDatesRE:c.disabledDatesRE,disabledDatesText:c.disabledDatesText,disabledDays:c.disabledDays,disabledDaysText:c.disabledDaysText,showToday:c.showToday,startDay:c.startDay,minText:d(c.minText,c.formatDate(c.minValue)),maxText:d(c.maxText,c.formatDate(c.maxValue)),listeners:{scope:c,select:c.onSelect},keyNavConfig:{esc:function(){c.collapse()}},timeLabel:c.timeLabel,doneText:c.doneText,setTimeText:c.setTimeText,dateFormat:c.dateFormat,datePicker:c.datePicker,timeFormat:c.timeFormat,timePicker:c.timePicker});return Ext.ComponentManager.create(b,"datetimepicker")},collapseIf:function(b){if(!this.isDestroyed&&!b.within(this.picker.timePicker.getEl())){this.callParent([b])}}})})();